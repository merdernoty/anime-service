name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build application
      run: go build -v -o anime-service ./cmd/api/main.go

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          # Создаем директорию
          mkdir -p /opt/anime-service

          # Очищаем старые файлы
          rm -f /opt/anime-service/anime-service

    - name: Copy Binary
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: anime-service
        target: /opt/anime-service/

    - name: Setup and Start Service
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          # Делаем бинарный файл исполняемым
          chmod +x /opt/anime-service/anime-service

          # Создаем systemd service файл
          cat > /etc/systemd/system/anime-service.service << EOL
          [Unit]
          Description=Anime Service
          After=network.target

          [Service]
          Type=simple
          WorkingDirectory=/opt/anime-service
          ExecStart=/opt/anime-service/anime-service
          Restart=on-failure
          User=root

          [Install]
          WantedBy=multi-user.target
          EOL

          # Перезагружаем systemd
          systemctl daemon-reload
          
          # Включаем и перезапускаем сервис
          systemctl enable anime-service
          systemctl restart anime-service
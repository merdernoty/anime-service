name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Network Diagnostics
      run: |
        echo "Resolving IPv6 address..."
        dig ${{ secrets.SSH_HOST }}
        echo "Ping test..."
        ping6 -c 4 ${{ secrets.SSH_HOST }}

    - name: Build application
      run: go build -v -o anime-service ./cmd/api/main.go

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        command_timeout: 30m
        script: |
          echo "Starting deployment..."
          mkdir -p /opt/anime-service
          rm -f /opt/anime-service/anime-service

    - name: Copy Binary
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: anime-service
        target: /opt/anime-service/
        debug: true

    - name: Setup and Start Service
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        command_timeout: 30m
        script: |
          echo "Setting up service..."
          chmod +x /opt/anime-service/anime-service

          cat > /etc/systemd/system/anime-service.service << EOL
          [Unit]
          Description=Anime Service
          After=network.target

          [Service]
          Type=simple
          WorkingDirectory=/opt/anime-service
          ExecStart=/opt/anime-service/anime-service
          Restart=on-failure
          User=root

          [Install]
          WantedBy=multi-user.target
          EOL

          systemctl daemon-reload
          systemctl enable anime-service
          systemctl restart anime-service
          systemctl status anime-service